service: quiccasa-service
# app and org for use with dashboard.serverless.com
app: quiccasa-service
#org: sistemisolarirossi

# only deploy with a specific Serverless version
frameworkVersion: '2'

useDotenv: true

configValidationMode: "error"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: serverless
  stage: dev
  region: eu-west-1
  apiGateway:
    shouldStartNameWithService: true
  tracing:
    apiGateway: true
    lambda: true

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
        - Effect: "Allow"
          Action:
            - "s3:GetObject"
            - "s3:PutObject"
            - "s3:DeleteObject"
          Resource: { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "ServerlessDeploymentBucket" }, "/*" ] ] }

# service wide environment variables
#environment:
#  variable1: value1

# packaging information
package:
  individually: true
  patterns:
    - '!private/**'
    - '!tmp/**'
    #- '!node_modules/**'

functions:
  unsubscribe:
    handler: api.unsubscribe
    memorySize: 128 # MB, default is 1024 MB
    timeout: 10 # seconds, default is 6 seconds
    description: Unsubscribe user from service subscription
    events:
      - http: 
          method: get
          path: unsubscribe

plugins:
  - serverless-domain-manager
  - serverless-webpack

custom:
  version: 1
  domain:
    dev: apidev.sistemisolari.com
    prod: api.sistemisolari.com
  customDomain:
   #domainName: api.sistemisolari.com
    domainName:  ${self:custom.domain.${self:provider.stage}}
    basePath: "v${self:custom.version}"
    stage: ${self:provider.stage}
    createRoute53Record: true

  webpack:
    includeModules: false
